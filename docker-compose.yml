version: '3'
services:
  flask:
    build: backend
    container_name: backend-flask
    environment:
      - FLASK_DEBUG=True
      - PYTHONUNBUFFERED=True
      - MONGO_ROOT_USER=${MONGO_ROOT_USER}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    restart: always
    volumes:
      - ./backend:/backend
    networks:
      - mongo_network
    depends_on:
      - mongo
    ports:
      - "5000:5000"
    command: gunicorn --bind 0.0.0.0:5000 main:app --timeout 600

  mongo:
    image: mongo:6.0.1
    container_name: mongoDB
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - mongo_network
    ports:
      - "27017:27017"

  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    container_name: mongo-express
    restart: unless-stopped
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongoDB
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=True
      - ME_CONFIG_MONGODB_AUTH_USERNAME=${MONGO_ROOT_USER}
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_URL="mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASSWORD}@mongoDB:27017/"
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD}
    networks:
      - mongo_network
    depends_on:
      - mongo
    ports:
      - "8081:8081"

#  redis:
#    image: redis:7.0.4
#    container_name: redis
#    restart: unless-stopped
#    command: redis-server --requirepass ${REDIS_ROOT_PASSWORD}
#    ports:
#     - "6379:6379"
#    volumes:
#     - $PWD/redis-data:/var/lib/redis
#     - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
#    environment:
#     - REDIS_REPLICATION_MODE=master
#    depends_on:
#      - flask
#    networks:
#      - mongo_network

  nginx:
    build: ./nginx
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - flask
      - mongo
    networks:
      - mongo_network
      - api_net

  postgres:
    build: postgres/
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - bot_files:/var/lib/postgresql/data
    networks:
      - bot_net

  bot:
    build: bot/
    container_name: teleg_bot
    restart: unless-stopped
    environment:
      PG_NAME: ${POSTGRES_DB}
      PG_USER: ${POSTGRES_USER}
      PG_PASSWORD: ${POSTGRES_PASSWORD}
      PG_HOST: postgres
      TOKEN: ${TOKEN}
    networks:
      - bot_net
      - api_net
    depends_on:
      - postgres

volumes:
  mongodb_data_container:
  bot_files:

networks:
  mongo_network:
    driver: bridge
  bot_net:
    driver: bridge
  api_net:
    driver: bridge
